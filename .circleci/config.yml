version: 2
jobs:
  build:
    docker:
      - image: alpine:3.4
    environment:
      IMAGE: registry.heroku.com/young-peak-91678/web
    steps:
      - run: mkdir -p /tmp/workspace/docker
      - run:
          name: install docker
          command: |
            apk update
            apk add docker
      - checkout
      # ↓コンテナの中でコンテナを使えないことを考えると、リモートのDockerを使うのに必須っぽいおまじない
      - setup_remote_docker:

      # build
      - run:
          name: login docker
          command: docker login -u _ -p $HEROKU_API_KEY registry.heroku.com
      - run:
          name: pull docker image
          command: docker pull $IMAGE:latest
      - run:
          name: build docker image
          command: docker build --tag $IMAGE:latest --file ./Dockerfile.prod .
      - run:
          name: push docker image
          command: docker push $IMAGE:latest
      # test
      - run:
          name: Docker Compose をインストール
          command: |
              curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
              chmod +x ~/docker-compose
              sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker
      - run:
          name: build docker-compose
          command: |
              set -x
              docker-compose up -d
      - run:
          name: Run test and formatter
          command: |
              docker-compose exec users python -m pytest "project/tests" -p no:warnings
              docker-compose exec users flake8 project
              docker-compose exec users black project --check
              docker-compose exec users isort project/**/*.py --check-only
  deploy:
    docker:
      - image: alpine:3.4
    environment:
      HEROKU_APP_NAME: young-peak-91678
      HEROKU_REGISTRY_IMAGE: registry.heroku.com/${HEROKU_APP_NAME}/web
    steps:
      - checkout
      # start proprietary DB using private Docker image
      - run:
          name: setup environment
          command: |
              apk add --no-cache curl
              chmod +x ./release.sh
      - run:
          name: build docker image
          command: docker build --tag $HEROKU_REGISTRY_IMAGE --file ./Dockerfile.prod .
      - run:
          name: heloku login
          command:
              docker login -u _ -p $HEROKU_API_KEY registry.heroku.com
      - run:
          name: push docker image and release
          command: |
              docker push $HEROKU_REGISTRY_IMAGE
              ./release.sh