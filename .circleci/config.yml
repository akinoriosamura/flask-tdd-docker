version: 2
jobs:
  build:
    docker:
      - image: python:latest
    environment:
      IMAGE: registry.heroku.com/aqueous-mountain-28973/web
    steps:
      - checkout

      - setup_remote_docker:   # (2)
      - run:
          name: Install Docker client
          command: |
              set -x
              VER="19.03.5"
              curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
              tar -xz -C /tmp -f /tmp/docker-$VER.tgz
              mv /tmp/docker/* /usr/bin
      - run:
          name: login docker
          command: docker login -u $DOCKER_USER -p $DOCKERHUB_PASSWORD
      - run:
          name: build docker image
          command: docker build --cache-from $IMAGE:latest --tag $IMAGE:latest --file ./Dockerfile.prod .
      - run:
          name: push docker image
          command: docker push $IMAGE:latest

  test:
    # すべてのコマンドを実行する場所となるプライマリコンテナイメージ
    docker:
      - image: registry.heroku.com/aqueous-mountain-28973/web:latest
        auth:
          username: $DOCKER_USER
          password: $DOCKERHUB_PASSWORD
      # サービスコンテナイメージ
      - image: circleci/postgres:9.6.5-alpine-ram
    steps:
      - checkout
      - run:
          name: Run test and formatter
          environment:
              POSTGRES_DB: users
              POSTGRES_USER: runner
              POSTGRES_PASSWORD: ""
              DATABASE_TEST_URL: postgres://runner@postgres:5432/users
          command: |
              pytest "project/tests" -p no:warnings
              flake8 project
              black project --check
              isort project/**/*.py --check-only

      - setup_remote_docker

  deploy:
    docker:
      - image: alpine:3.4
    environment:
      HEROKU_APP_NAME: aqueous-mountain-28973
      HEROKU_REGISTRY_IMAGE: registry.heroku.com/${HEROKU_APP_NAME}/web
    steps:
      - checkout
      # start proprietary DB using private Docker image
      - run:
          name: setup environment
          command: |
              apk add --no-cache curl
              chmod +x ./release.sh
      - run:
          name: build docker image
          command: docker build --tag $HEROKU_REGISTRY_IMAGE --file ./Dockerfile.prod .
      - run:
          name: heloku login
          command:
              docker login -u _ -p $HEROKU_AUTH_TOKEN registry.heroku.com
      - run:
          name: push docker image
          command: |
              docker push $HEROKU_REGISTRY_IMAGE
              ./release.sh